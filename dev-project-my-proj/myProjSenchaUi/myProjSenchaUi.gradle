//version = myProjectUiVersion
//group = myProjectGroupId
//description myProjectUiDesc
//project.ext.isParent = true
//project.ext.skipBuild = true
//https://github.com/frankbolviken/SenchaGradle/blob/master/build.gradle
//https://github.com/frankbolviken/sencha-plugin-gradle
ext {
    isWindows = org.gradle.internal.os.OperatingSystem.current().windows
}
//task checkSenchaEnv{
//    if (System.env['SENCHA_CMD_HOME'] == null){
//        ant.fail('ERROR : SENCHA_CMD_HOME variable is not set')
//    } else if (System.env['SENCHA_EXTJS_HOME'] == null){
//        ant.fail('ERROR : SENCHA_EXTJS_HOME variable is not set')
//    } else if (System.env['SENCHA_TOUCH_HOME'] == null){
//        ant.fail('ERROR : SENCHA_TOUCH_HOME variable is not set')
//    }
//}
//def dd(dir){
//    println 'Deleting..........................'
//    delete dir
//}

//task checkSenchaEnv(type:Exec){
//    if(isWindows) {
//        commandLine 'cmd', '/c', 'sencha', 'which'
//    } else {
//        commandLine 'sencha', 'which'
//    }
//}
//task senchaClean(type:Delete) {
//    delete './MyProjExtJsUi/build/production'
//}
//task senchaBuild(type:org.gradle.api.tasks.Exec) {
//    workingDir './MyProjExtJsUi'
//    if(isWindows) {
//        workingDir './MyProjExtJsUi'
//        commandLine 'cmd', '/c', 'sencha', 'app', 'build', 'production'
//    } else {
//        workingDir './MyProjExtJsUi'
//        commandLine 'sencha', 'app', 'build', 'production'
//    }
//}
//task fullSenchaBuild() {
//
//}
//fullSenchaBuild.dependsOn senchaBuild
//senchaBuild.dependsOn checkSenchaEnv
//senchaBuild.dependsOn senchaClean

task checkSenchaCmdEnvCommandLine(type:Exec){
    if(isWindows) {
        commandLine 'cmd', '/c', 'sencha', 'which'
    } else {
        commandLine 'sencha', 'which'
    }
}
def checkSenchaCmdEnv(){
    try {
        exec {
            executable 'sencha'
            args 'which'
        }
    } catch (Exception e){
        logger.error('####################################################################')
        logger.error('Sencha Command Not Installed in this machine. Terminating build')
        logger.error('####################################################################')
        throw e
    }
}
def senchaClean(String projectDir, String buildProfile) {
    delete './' + projectDir + '/build/' + buildProfile
}
def senchaBuild(String projectDir, String buildProfile) {
    logger.info('####################################################################')
    logger.info('Building Project in Directory \'' + projectDir + '\' with Profile as :' + buildProfile)
    logger.info('####################################################################')
    exec {
        workingDir './' + projectDir
        executable 'sencha'
        args 'app', 'build', buildProfile
    }
}
task fullSenchaBuild() {
//    checkSenchaCmdEnv()
//    senchaClean('MyProjExtJsUi', senchaBuildProfile)
//    senchaBuild('MyProjExtJsUi', senchaBuildProfile)
//    senchaClean('MyProjTouchUi', senchaBuildProfile)
//    senchaBuild('MyProjTouchUi', senchaBuildProfile)
}
fullSenchaBuild.dependsOn checkSenchaCmdEnvCommandLine
//build.dependsOn fullSenchaBuild

//fullSenchaBuild.dependsOn senchaClean