import java.text.SimpleDateFormat
Date buildTimeAndDate = new Date()
ext {
    buildDate = new SimpleDateFormat('dd-MMM-yyyy').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('hh:mm aa z').format(buildTimeAndDate)
}
//task platformBuild(dependsOn: [project(':coreProject').build]){
//    description : "Makes build only for the platform Projects"
//}
//https://github.com/hibernate/hibernate-orm/blob/master/dev-project-my-proj.gradle
//https://github.com/hibernate/hibernate-orm/blob/master/settings.gradle
//https://github.com/spring-projects/spring-framework/blob/master/dev-project-my-proj.gradle
//https://github.com/groovy/groovy-core/tree/master/subprojects
//https://github.com/groovy/groovy-core/tree/master/subprojects
//https://github.com/gradle/gradle/blob/master/settings.gradle#L55
//https://github.com/Qi4j/qi4j-core
//https://github.com/mockito/mockito
//apply plugin: 'eclipse'
//apply plugin: 'idea'

init {
    project(":$myProjName").ext.skipBuild = true
    project(":$myProjName:$myProjUiName").ext.skipBuild = true
    project(":$myProjName:$myProjUiName:$myProjUiWebName").ext.skipBuild = true
    project(":$myProjName:$myProjUiName:$myProjUiMobileName").ext.skipBuild = true
    project(":$myProjName:$myProjUiName:$myProjUiWebName").ext.isSencha = true
    project(":$myProjName:$myProjUiName:$myProjUiMobileName").ext.isSencha = true
    if (project.hasProperty('senchaBuildProfile')){
        project(":$myProjName:$myProjUiName:$myProjUiWebName").ext.senchaBuildProfile = args(senchaBuildProfile)
        project(":$myProjName:$myProjUiName:$myProjUiMobileName").ext.senchaBuildProfile = args(senchaBuildProfile)
    } else {
        project(":$myProjName:$myProjUiName:$myProjUiWebName").ext.senchaBuildProfile = defaultSenchaBuildProfile
        project(":$myProjName:$myProjUiName:$myProjUiMobileName").ext.senchaBuildProfile = defaultSenchaBuildProfile
    }
}

version = projectVersion
subprojects {   eachChildProject ->
    //  No Need to Apply these plugins and other tasks for Parent Projects
    if (! ( (eachChildProject.ext.has("skipBuild")) && (eachChildProject.ext.get("skipBuild") == true) )){
//    if(eachChildProject.childProjects.size() == 0){
        apply plugin: 'java'
        apply from: "${rootProject.projectDir}/${mavenPublishGradleFileLoc}"
        group = projectGroupId
        repositories {
            mavenLocal()
            mavenCentral()
            maven {
                credentials {
                    username mavenTestRepoUsername
                    password mavenTestRepoPassword
                }
                url mavenTestRepoUrl
            }
        }
        task buildWithPublish(dependsOn: ['javadoc', 'build', 'publishToMavenLocal', 'publish']){
        }
        dependencies {
            testCompile group: 'junit', name: 'junit', version: '4.11'
        }
    } else if (! ( (eachChildProject.ext.has("isSencha")) && (eachChildProject.ext.get("isSencha") == true) )){
        println "======================================================================================================="
        println "APPLY SENCHA BUILD to  \"${eachChildProject.name}\" Since It is Configured as isSencha=true"
        println "======================================================================================================="
    } else{
        println "======================================================================================================="
        println "SKIPPED \"${eachChildProject.name}\" Since It is Configured as skipBuild=true"
        println "======================================================================================================="
    }
}
